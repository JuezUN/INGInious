const CsvConverter=function(){function t(t){this.data=t}return t.prototype.downloadCsv=function(){const t="data:text/csv;charset=utf-8,"+Papa.unparse(this.data),s=encodeURI(t),e=document.createElement("a");e.setAttribute("href",s),e.setAttribute("download","export.csv"),document.body.appendChild(e),e.click(),e.remove()},t}(),Statistic=function(){function t(){this._cachedPromise=null}return t.prototype._fetchAndCacheData=function(){return null==this._cachedPromise&&(this._cachedPromise=this._fetchData()),this._cachedPromise},t.prototype.plotAsync=function(){const t=this;this._fetchAndCacheData().then(function(s){t._plotData(s)})},t.prototype._fetchCsvData=function(){return this._fetchAndCacheData()},t.prototype.downloadCsvAsync=function(){this._fetchCsvData().then(function(t){new CsvConverter(t).downloadCsv()})},t.prototype._plotData=function(t){throw"Not implemented"},t.prototype._fetchData=function(){throw"Not implemented"},t}();function createSubmissionLink(t){return _.template("/submission/${ submissionId }")({submissionId:t})}function generateVerdictSubmissionTable(t,s){const e=$("#"+t);e.html("<thead><tr><th>Username</th><th>Grade</th><th>Status</th><th>Summary result</th><th>Submitted on</th><th>Submission</th></tr></thead>");const i=$("<tbody/>");for(let t=0;t<s.length;++t){const e=$("<tr/>"),a=s[t],o=[a.username,a.grade,a.status||"-",a.summary_result||"-",a.submitted_on||"-"];for(let t=0;t<o.length;++t){const s=$("<td/>");s.text(o[t]),e.append(s)}const r=$("<td/>");if(a.id){const t=$("<a>",{text:a.id,href:createSubmissionLink(a.id)});r.append(t)}else r.text("No submission available");e.append(r),i.append(e)}e.append(i)}function generateSubmissionTable(t,s){const e=$("#"+t);e.html("<thead><tr><th>Username</th><th>Grade</th><th>Status</th><th>Summary result</th><th>Submitted on</th><th>Submission</th></tr></thead>");const i=$("<tbody/>");for(let t=0;t<s.length;++t){const e=$("<tr/>"),a=s[t],o=a.submission||{},r=[a.username,a.grade,o.status||"-",o.summary_result||"-",o.submitted_on||"-"];for(let t=0;t<r.length;++t){const s=$("<td/>");s.text(r[t]),e.append(s)}const n=$("<td/>");if(o.id){const t=$("<a>",{text:o.id,href:createSubmissionLink(o.id)});n.append(t)}else n.text("No submission available");e.append(n),i.append(e)}e.append(i)}function createAlertHtml(t,s){return'<div class="alert '+t+' alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>'+s+"</div>"}const UserStatistics={colors:{COMPILATION_ERROR:"rgb(236,199,6)",TIME_LIMIT_EXCEEDED:"rgb(50,120,202)",MEMORY_LIMIT_EXCEEDED:"rgb(119,92,133)",RUNTIME_ERROR:"rgb(2,164,174)",WRONG_ANSWER:"rgb(227,79,54)",OUTPUT_LIMIT_EXCEEDED:"rgb(137,139,37)",GRADING_RUNTIME_ERROR:"rgb(139,62,0)",PRESENTATION_ERROR:"rgb(59,105,139)",ACCEPTED:"rgb(35,181,100)"}},UserTrialsAndBestGradeStatistic=function(){function t(t){this.course_id=t,this.div_id="tries_per_task",this.RESOURCE_URL="/api/stats/student/trials_and_best_grade"}return t.prototype=Object.create(Statistic.prototype),t.prototype._fetchData=function(){return $.getJSON(this.RESOURCE_URL,{course_id:this.course_id})},t.prototype._plotData=function(t){const s=this._getRatio(t),e={},i=Object.keys(UserStatistics.colors);for(let t=0;t<i.length;t++)e[i[t]]={mode:"markers",name:i[t],marker:{color:UserStatistics.colors[i[t]],sizemode:"area",sizeref:s,size:[]},text:[],x:[],y:[]};for(let s=0;s<t.length;s++){const i=t[s].result;e[i].x.push(t[s].task_name),e[i].y.push(t[s].grade),e[i].text.push(t[s].tried+" submissions"),e[i].marker.size.push(t[s].tried)}const a=[];for(let t=0;t<i.length;t++)a.push(e[i[t]]);Plotly.purge(this.div_id),Plotly.plot(this.div_id,a,{xaxis:{title:"Task"},yaxis:{title:"Grade",range:[-10,110]},margin:{t:20},hovermode:"closest",legend:{font:{size:10},itemsizing:"constant"}},{showLink:!1})},t.prototype._getRatio=function(t){let s=0;for(let e=0;e<t.length;e++)s+=t[e].tried;return s/t.length/1e3},t}(),BarSubmissionsPerTasks=function(){function t(t,s,e=!1){this.course_id=t,this.id_div=s||"submissions_per_task",this.RESOURCE_URL="/api/stats/student/bar_submissions_per_tasks",this.normalize=!1,this.include_late_submissions=e}return t.prototype=Object.create(Statistic.prototype),t.prototype._fetchData=function(){return $.getJSON(this.RESOURCE_URL,{course_id:this.course_id,late_submissions:this.include_late_submissions})},t.prototype.toggleNormalize=function(){this.normalize=!this.normalize,this.plotAsync()},t.prototype._plotData=function(t){const s={},e=[];for(let i=0;i<t.length;++i)null==s[t[i].task_name]&&(s[t[i].task_name]=0,e.push(t[i].task_name)),s[t[i].task_name]+=t[i].count;const i=UserStatistics.colors,a=[this.createObjectToPlotData(t,s,"COMPILATION_ERROR",i.COMPILATION_ERROR),this.createObjectToPlotData(t,s,"TIME_LIMIT_EXCEEDED",i.TIME_LIMIT_EXCEEDED),this.createObjectToPlotData(t,s,"MEMORY_LIMIT_EXCEEDED",i.MEMORY_LIMIT_EXCEEDED),this.createObjectToPlotData(t,s,"RUNTIME_ERROR",i.RUNTIME_ERROR),this.createObjectToPlotData(t,s,"WRONG_ANSWER",i.WRONG_ANSWER),this.createObjectToPlotData(t,s,"OUTPUT_LIMIT_EXCEEDED",i.OUTPUT_LIMIT_EXCEEDED),this.createObjectToPlotData(t,s,"GRADING_RUNTIME_ERROR",i.GRADING_RUNTIME_ERROR),this.createObjectToPlotData(t,s,"PRESENTATION_ERROR",i.PRESENTATION_ERROR),this.createObjectToPlotData(t,s,"ACCEPTED",i.ACCEPTED)],o={barmode:"stack",title:"Submissions vs Task",xaxis:{title:"Tasks",categoryorder:"array",categoryarray:e,titlefont:{size:16,color:"rgb(107, 107, 107)"}},yaxis:{title:this.normalize?"Percentage of submissions":"Number of submissions",titlefont:{size:16,color:"rgb(107, 107, 107)"}}};Plotly.purge(this.id_div),Plotly.newPlot(this.id_div,a,o)},t.prototype.createObjectToPlotData=function(t,s,e,i){const a={x:[],y:[],marker:{color:i},name:e,type:"bar"};for(let i=0;i<t.length;++i)t[i].summary_result===e&&(a.x.push(t[i].task_name),this.normalize?a.y.push(t[i].count/s[t[i].task_name]*100):a.y.push(t[i].count));return a},t}();$(function(){UserStatistics.course_id=getCourseId(),UserStatistics.trialsAndBestGradeStatistic=new UserTrialsAndBestGradeStatistic(UserStatistics.course_id),UserStatistics.barSubmissionsPerTasks=new BarSubmissionsPerTasks(UserStatistics.course_id),UserStatistics.barLateSubmissionsPerTasks=new BarSubmissionsPerTasks(UserStatistics.course_id,"late_submissions_per_task",!0);const t={"trials-circle-tab":UserStatistics.trialsAndBestGradeStatistic,"bar-submissions-per-tasks-tab":UserStatistics.barSubmissionsPerTasks,"bar-late-submissions-per-tasks-tab":UserStatistics.barLateSubmissionsPerTasks};$('a[data-toggle="tab"]').on("shown.bs.tab",function(s){const e=t[s.target.id];e&&e.plotAsync()}),$('.active > a[data-toggle="tab"]').trigger("shown.bs.tab")});
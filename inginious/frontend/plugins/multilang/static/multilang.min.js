function load_input_code_multiple_languages(e,n,o){load_input_code(e,n,o),setDropDownWithTheRightLanguage(n,o[n+"/language"]),changeSubmissionLanguage(n)}function setDropDownWithTheRightLanguage(e,n){document.getElementById(e+"/language").value=n}function changeSubmissionLanguage(e){const n=getLanguageForProblemId(e),o=CodeMirror.findModeByName(n),t=codeEditors[e];t.setOption("inginiousLanguage",getInginiousLanguageForProblemId(e)),t.setOption("mode",o.mime),t.setOption("gutters",["CodeMirror-linenumbers","CodeMirror-foldgutter","CodeMirror-lint-markers"]),t.setOption("lint",{async:!0}),CodeMirror.autoLoadMode(t,o.mode)}function getLanguageForProblemId(e){return convertInginiousLanguageToCodemirror(getInginiousLanguageForProblemId(e))}function getInginiousLanguageForProblemId(e){const n=document.getElementById(e+"/language");return null==n?"plain":n.options[n.selectedIndex].value}function convertInginiousLanguageToCodemirror(e){return{java7:"java",java8:"java",js:"javascript",cpp:"cpp",cpp11:"cpp",c:"c",c11:"c",python2:"python",python3:"python",ruby:"ruby",vhdl:"vhdl",verilog:"verilog"}[e]}function studio_init_template_code_multiple_languages(e,n,o){"type"in o&&$("#type-"+n,e).val(o.type),"optional"in o&&o.optional&&$("#optional-"+n,e).attr("checked",!0),"languages"in o&&jQuery.each(o.languages,function(o,t){t&&$("#"+o+"-"+n,e).attr("checked",!0)})}function studio_init_template_notebook_file(e,n,o){"type"in o&&$("#type-"+n,e).val(o.type)}function load_input_notebook_file(e,n,o){load_input_file(e,n,o);const t=$("form#task").attr("action")+"?submissionid="+e+"&questionid="+n;$.ajax({url:t,method:"GET",dataType:"json",success:function(e){render_notebook(e)}})}function studio_init_template_code_file_multiple_languages(e,n,o){"max_size"in o&&$("#maxsize-"+n,e).val(o.max_size),"allowed_exts"in o&&$("#extensions-"+n,e).val(o.allowed_exts.join()),"languages"in o&&jQuery.each(o.languages,function(o,t){t&&$("#"+o+"-"+n,e).attr("checked",!0)})}function load_input_code_file_multiple_languages(e,n,o){load_input_file(e,n,o),setDropDownWithTheRightLanguage(n,o[n+"/language"])}let selected_all_languages=!1;function toggle_languages_checkboxes(){selected_all_languages=!selected_all_languages,$(".checkbox_language").prop("checked",selected_all_languages);let e="Select all";selected_all_languages&&(e="Unselect All"),$("#toggle_select_languages_button").text(e)}const original_studio_subproblem_delete=this.studio_subproblem_delete;this.studio_subproblem_delete=(e=>{original_studio_subproblem_delete(e),toggle_display_new_subproblem_option()});const original_studio_create_new_subproblem=this.studio_create_new_subproblem;function toggle_display_new_subproblem_option(){const e=$("#accordion"),n=$("#new_subproblem");e.children().length?n.hide():n.show()}this.studio_create_new_subproblem=(()=>{original_studio_create_new_subproblem(),toggle_display_new_subproblem_option()});const render_notebook=function(e){const n=$("#notebook-holder")[0];$("#notebook-holder").hide();const o=this.notebook=nb.parse(e);for(;n.hasChildNodes();)n.removeChild(n.lastChild);n.appendChild(o.render()),Prism.highlightAll(),$("#notebook-holder").show()};function notebook_start_renderer(){$("#task_alert").after('<div class="DivToScroll DivWithScroll" id="notebook-holder" hidden></div>');try{const e=$("input[name="+getProblemId()+"]")[0];e.onchange=function(e){const n=this.files[0];if(void 0===n||"ipynb"!==n.name.split(".")[1])return $("#notebook-holder").html(""),void $("#notebook-holder").hide();!function(e){const n=new FileReader;n.onload=function(e){const n=JSON.parse(this.result);render_notebook(n)},n.readAsText(e)}(n)},e.onclick=function(){this.value=null,$("#notebook-holder").html(""),$("#notebook-holder").hide()}}catch(e){}}function updateDiffBlock(e,n){$("#"+e).html(parseOutputDiff(n))}function createDownloadLink(e,n){const o="<a "+('class="btn-link" download="'+e+'"')+'href="data:text/plain;charset=utf-8,'+encodeURIComponent(n)+'">Download</a>';document.getElementById(e+"_download_link").innerHTML=o+"<br/><br/>"}function parseOutputDiff(e){let n=[],o=e.split("\n");n.push('<strong>Legend:</strong> <span class="diff-missing-output">Only in the expected output</span> <span class="diff-additional-output">Only in your output</span> <span class="diff-common">Common</span> <span class="diff-position-control">Context information</span>');for(let e=0;e<o.length;++e){let t=o[e],i=null;if(t.startsWith("---"))i='<span class="diff-missing-output">'+t.substring(4)+"</span>";else if(t.startsWith("+++"))i='<span class="diff-additional-output">'+t.substring(4)+"</span>";else if(t.startsWith("@@"))i='<span class="diff-position-control">'+t+"</span>";else if(t.startsWith("-"))i='<span class="diff-missing-output">'+t.substring(1)+"</span>";else if(t.startsWith("+"))i='<span class="diff-additional-output">'+t.substring(1)+"</span>";else if(t.startsWith(" "))i='<span class="diff-common">'+t.substring(1)+"</span>";else if(t.startsWith("..."))i='<span class="diff-position-control">'+t+"</span>";else{if(""!==t)throw new Error("Unable to parse diff line: "+t);i=t}n.push(i)}return n.join("\n")}jQuery(document).ready(function(){toggle_display_new_subproblem_option(),notebook_start_renderer()});